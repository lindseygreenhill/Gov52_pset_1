knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
births <- tibble(prop_girls = c(.4777, .4875, .4859, .4754, .4874, .4864, .4813, .4787, .4895, .4797, .4876, .4859.4857, .4907, .5010, .4903, .4860, .4911, .4871, .4725, .4822, .4870, .4823, .4973)
births <- tibble(prop_girls = c(.4777, .4875, .4859, .4754, .4874, .4864, .4813, .4787, .4895, .4797, .4876, .4859.4857, .4907, .5010, .4903, .4860, .4911, .4871, .4725, .4822, .4870, .4823, .4973))
births = tibble(prop_girls = c(.4777, .4875, .4859, .4754, .4874, .4864, .4813, .4787, .4895, .4797, .4876, .4859.4857, .4907, .5010, .4903, .4860, .4911, .4871, .4725, .4822, .4870, .4823, .4973))
births <- tibble(prop_girls =
c(.4777,
.4875,
.4859,
.4754,
.4874,
.4864,
.4813,
.4787,
.4895,
.4797,
.4876,
.4859, .4857, .4907, .5010, .4903, .4860, .4911, .4871, .4725, .4822, .4870, .4823, .4973))
sd(births$prop_girls)
# calculating standard deviation
sd(births$prop_girls)
# averaging the proportions above and dividing by the square root of the sample size. So p bar divided by the square root of the number $$sqrt(p())
avg_birth <- mean(birthds$prop_girls)
# calculating standard deviation
sd(births$prop_girls)
# averaging the proportions above and dividing by the square root of the sample size. So p bar divided by the square root of the number $$sqrt(p())
avg_birth <- mean(births$prop_girls)
std_theoretical <- sqrt(avg_birth * (1 - avg_birth) / 3900)
std_theoretical <- sqrt(avg_birth * (1 - avg_birth) / 3900)
std_theoretical
std_theoretical <- sqrt(avg_birth * (1 - avg_birth) / 24)
std_theoretical
?qchisq
varTest(births$prop_girls, alternative = "two.sided",
conf.level = .95)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
## Problem 2a. Page 27 of textbook
library(tidyverse)
library(janitor)
```{r data, echo=FALSE}
births <- tibble(prop_girls =
c(.4777,
.4875,
.4859,
.4754,
.4874,
.4864,
.4813,
.4787,
.4895,
.4797,
.4876,
.4859, .4857, .4907, .5010, .4903, .4860, .4911, .4871, .4725, .4822, .4870, .4823, .4973))
```{r}
sd_actual <- sd(births$prop_girls)
avg_birth <- mean(births$prop_girls)
std_theoretical <- sqrt(avg_birth * (1 - avg_birth) / 24)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
# calculating standard deviation
sd_actual <- sd(births$prop_girls)
# averaging the proportions above and dividing by the square root of the sample
# size. So p bar divided by the square root of the number. Dividing by 24
# because we have 24 data points so that is our sample size.
avg_birth <- mean(births$prop_girls)
std_theoretical <- sqrt(avg_birth * (1 - avg_birth) / 24)
# use the chi-squared test to do this with 23 df. Finding the upper and lower bound and seeing if the chi squared test above is within these bounds.
# finding the chi sq test statistic
chisq <- ((23) * sd_actual^2) / std_theoretical^2
lower_bound <- qchisq(.05/2, df = 23)
upper_bound <- qchisq(.975, df = 23)
lower_bound <- qchisq(.05/2, df = 23)
lower_bound
# use the chi-squared test to do this with 23 df. Finding the upper and lower bound and seeing if the chi squared test above is within these bounds.
# finding the chi sq test statistic
chisq <- ((23) * sd_actual^2) / std_theoretical^2
# not really sure what the stuff below is for?
lower_bound <- qchisq(.05/2, df = 23)
upper_bound <- qchisq(.975, df = 23)
# calculating the p value
p_val <- 2*pchisq((chisq, df = 23))
p_val <- 2*pchisq(chisq, df = 23)
# use the chi-squared test to do this with 23 df. Finding the upper and lower bound and seeing if the chi squared test above is within these bounds.
# finding the chi sq test statistic
chisq <- ((23) * sd_actual^2) / std_theoretical^2
# not really sure what the stuff below is for?
lower_bound <- qchisq(.05/2, df = 23)
upper_bound <- qchisq(.975, df = 23)
# calculating the p value
p_val <- 2*pchisq(chisq, df = 23)
# use the chi-squared test to do this with 23 df. Finding the upper and lower bound and seeing if the chi squared test above is within these bounds.
# finding the chi sq test statistic
chisq <- ((23) * sd_actual^2) / std_theoretical^2
# not really sure what the stuff below is for?
lower_bound <- qchisq(.05/2, df = 23)
upper_bound <- qchisq(.975, df = 23)
# calculating the p value
p_val <- 2*pchisq(chisq, df = 23)
# calculating confidence interval
upper_real <- sqrt(23*24^2 / lower_bound)
lower_real <- sqrt(23*24^2 / upper_bound)
upper_real
lower_real
chisq
lower_bound
p_val
chisq
sums <- rep(NA, 1000)
for(i in 1:1000){
noms <- runif(20, 0, 1)
noms_sum <- sum(noms)
sums[i] <- noms_sum
}
sums
# plotting a histogram
{
hist(sums, main = "Distribution of 1000 Sims of Draws(0,1)",
probability = TRUE, las = 1)
curve(dnorm(x=x, mean = mean(sums), sd = sd(sums)),
col = "steeleblue2", lwd = 2, add  = TRUE, yaxt = "n")
}
# plotting a histogram
{
hist(sums, main = "Distribution of 1000 Sims of Draws(0,1)",
probability = TRUE, las = 1)
curve(dnorm(x=x, mean = mean(sums), sd = sd(sums)),
col = "steelblue2", lwd = 2, add  = TRUE, yaxt = "n")
}
sums <- rep(NA, 1000)
for(i in 1:1000){
noms <- runif(20, 0, 1)
noms_sum <- sum(noms)
sums[i] <- noms_sum
}
# plotting a histogram
{
hist(sums, main = "Distribution of 1000 Sims of Draws(0,1)",
probability = TRUE, las = 1)
curve(dnorm(x=x, mean = mean(sums), sd = sd(sums)),
col = "steelblue2", lwd = 2, add  = TRUE, yaxt = "n")
}
?uninstall.packages
??uninstall.packages
